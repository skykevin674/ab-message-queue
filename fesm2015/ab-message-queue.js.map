{"version":3,"file":"ab-message-queue.js.map","sources":["ng://ab-message-queue/lib/decorator.ts","ng://ab-message-queue/lib/ab-message-queue.service.ts","ng://ab-message-queue/lib/ab-message-queue.module.ts"],"sourcesContent":["import 'reflect-metadata';\nimport { Subject } from 'rxjs';\n\nexport const subject = new Subject<any>();\n\n/**\n *\n * @param type æ¶æ¯ç±»åï¼å¤ä¸ªç±»åä»¥,åé\n * @example\n *      @MessageHandler('test')\n *      handlerTest(value: any) {\n *        // ...\n *      }\n */\nexport const MessageHandler = function (type: string) {\n  return function (target: any, key: string, descriptor: any) {\n    if (/(\\w+\\,)*\\w+/.test(type)) {\n      const types = type.split(',');\n      let map = Reflect.getMetadata('ab:handler', target);\n      if (!map) {\n        map = new Map<String, Function>();\n      }\n      types.forEach((t: string) => {\n        map[t] = descriptor.value;\n      });\n      Reflect.defineMetadata('ab:message', subject.asObservable(), target);\n      Reflect.defineMetadata('ab:handler', map, target);\n    } else {\n      throw new Error('ç±»åä»éå­æ¯æ°å­ä¸åçº¿');\n    }\n  };\n};\n\n","import { Injectable } from '@angular/core';\nimport { subject } from './decorator';\nimport { Observable } from 'rxjs';\n\n/**\n * æ¶æ¯åéæå¡ç±»\n * @author xuchao\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AbMessageQueueService {\n\n  constructor() { }\n\n  /**\n   * æ¶æ¯åéæ¹æ³\n   * @param type æ¶æ¯ç±»å\n   * @param value æ¶æ¯æºå¸¦å¼\n   */\n  public send(type: string, value?: any) {\n    subject.next({ type, value });\n  }\n\n  /**\n   * å°æ¶æ¯å¤çæ¹æ³ç»å®å°å¯¹åºå®ä½ä¸\n   * @param context componentå®ä½\n   */\n  public bind(context: any) {\n    const queue = Reflect.getMetadata('ab:message', context) as Observable<any>;\n    const handler = Reflect.getMetadata('ab:handler', context);\n    if (queue) {\n      queue.subscribe(val => {\n        const callback = handler[val.type];\n        if (callback) {\n          callback.call(context, val.value);\n        }\n      });\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AbMessageQueueService } from './ab-message-queue.service';\n@NgModule({\n  imports: [\n  ],\n  declarations: [],\n  exports: []\n})\nexport class AbMessageQueueModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AbMessageQueueModule,\n      providers: [AbMessageQueueService]\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA,uBAGa,OAAO,GAAG,IAAI,OAAO,EAAO,CAAC;;;;;;;;;;AAW1C,uBAAa,cAAc,GAAG,UAAU,IAAY;IAClD,OAAO,UAAU,MAAW,EAAE,GAAW,EAAE,UAAe;QACxD,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC5B,uBAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC9B,qBAAI,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YACpD,IAAI,CAAC,GAAG,EAAE;gBACR,GAAG,GAAG,IAAI,GAAG,EAAoB,CAAC;aACnC;YACD,KAAK,CAAC,OAAO,CAAC,CAAC,CAAS;gBACtB,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;aAC3B,CAAC,CAAC;YACH,OAAO,CAAC,cAAc,CAAC,YAAY,EAAE,OAAO,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;YACrE,OAAO,CAAC,cAAc,CAAC,YAAY,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;SACnD;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;SAChC;KACF,CAAC;CACH;;;;;;AC/BD;;;;AAWA;IAEE,iBAAiB;;;;;;;IAOV,IAAI,CAAC,IAAY,EAAE,KAAW;QACnC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;;;;;;;IAOzB,IAAI,CAAC,OAAY;QACtB,uBAAM,KAAK,qBAAG,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,CAAoB,CAAA,CAAC;QAC5E,uBAAM,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAC3D,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,SAAS,CAAC,GAAG;gBACjB,uBAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,QAAQ,EAAE;oBACZ,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;iBACnC;aACF,CAAC,CAAC;SACJ;;;;YA9BJ,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACVD;;;;IASE,OAAO,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE,CAAC,qBAAqB,CAAC;SACnC,CAAC;KACH;;;YAZF,QAAQ,SAAC;gBACR,OAAO,EAAE,EACR;gBACD,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,EAAE;aACZ;;;;;;;;;;;;;;;"}
